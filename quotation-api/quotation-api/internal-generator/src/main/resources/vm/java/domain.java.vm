package ${packageName}.domain;

#foreach ($import in $importList)
import ${import};
#end
import java.math.BigDecimal;

import com.baomidou.mybatisplus.annotation.IdType;
import com.baomidou.mybatisplus.annotation.TableField;
import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.TableName;
import com.internal.common.core.domain.BaseEntity;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
#if($table.crud || $table.sub)
#elseif($table.tree)
#end

/**
 * ${functionName}对象 ${tableName}
 *
 * @author ${author}
 * @date ${datetime}
 */
#if($table.crud || $table.sub)
#set($Entity="BaseEntity")
#elseif($table.tree)
#set($Entity="TreeEntity")
#end
@Data
@EqualsAndHashCode(callSuper = true)
@NoArgsConstructor
@Builder
@ApiModel(value = "${ClassName}",description = "${functionName}对象")
@TableName("${tableName}")
public class ${ClassName} extends ${Entity}
        {
private static final long serialVersionUID=1L;

#foreach ($column in $columns)
#if(!$table.isSuperColumn($column.javaField))
    /** $column.columnComment */
    @ApiModelProperty(value = "$column.columnComment")
#set($snakeCaseField = $column.javaField.replaceAll("([A-Z])", "_$1").toLowerCase())
#if($column.javaField == 'id')
    @TableId(value = "${snakeCaseField}", type = IdType.ASSIGN_ID)
#else
    @TableField(value = "${snakeCaseField}")
#end
#if($column.list)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
    #set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
    #set($comment=$column.columnComment)
#end
#if($parentheseIndex != -1)
    @Excel(name = "${comment}", readConverterExp = "$column.readConverterExp()")
#elseif($column.javaType == 'Date')
    @JsonFormat(pattern = "yyyy-MM-dd")
    @Excel(name = "${comment}", width = 30, dateFormat = "yyyy-MM-dd")
#else
    @Excel(name = "${comment}")
#end
#end
    private $column.javaType $column.javaField;

#end
#end
#if($table.sub)
    /** $table.subTable.functionName信息 */
    @ApiModelProperty(value = "$table.subTable.functionName信息")
    private List<${subClassName}> ${subclassName}List;

#end

    public ${ClassName} (#foreach ($column in $columns)#if(!$table.isSuperColumn($column.javaField))${column.javaType} ${column.javaField}#if($foreach.hasNext)#set($nextIndex = $foreach.index + 1)#if($nextIndex < $columns.size() && !$table.isSuperColumn($columns.get($nextIndex).javaField)),#end#end#end#end){
    #foreach ($column in $columns)
        #if(!$table.isSuperColumn($column.javaField))
                this.${column.javaField} = ${column.javaField};
        #end
    #end
    }
}