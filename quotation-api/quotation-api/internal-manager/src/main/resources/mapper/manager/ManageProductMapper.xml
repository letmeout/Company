<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.internal.manager.mapper.ManageProductMapper">

    <resultMap type="com.internal.manager.vo.ManageProductVO" id="ManageProductResultVO">
        <result property="id"    column="id"    />
        <result property="category"    column="category"    />
        <result property="name"    column="name"    />
        <result property="unit"    column="unit"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="status"    column="status"    />
        <result property="costPrice"    column="cost_price"    />
        <result property="extPrice"    column="ext_price"    />
        <result property="description"    column="description"    />
        <result property="parentId"    column="parent_id"    />
        <result property="nlSoftId"    column="nl_soft_id"    />
        <result property="xxSoftId"    column="xx_soft_id"    />
        <result property="shortName"    column="short_name"    />
    </resultMap>
    <resultMap type="com.internal.manager.vo.ManageProductChildVO" id="ManageProductChildResultVO">
        <result property="id"    column="id"    />
        <result property="category"    column="category"    />
        <result property="name"    column="name"    />
        <result property="unit"    column="unit"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="status"    column="status"    />
        <result property="costPrice"    column="cost_price"    />
        <result property="extPrice"    column="ext_price"    />
        <result property="description"    column="description"    />
        <result property="parentId"    column="parent_id"    />
        <result property="parentName"    column="parent_name"    />
        <result property="parentStatus"    column="parent_status"    />
        <result property="shortName"    column="short_name"    />
        <result property="parentShortName"    column="parent_short_name"    />
    </resultMap>

    <sql id="selectManageProductVo">
        select mp.id, mp.category, mp.name, mp.unit, mp.create_by, mp.create_time, mp.update_by, mp.update_time, mp.remark,
               mp.status, mp.cost_price, mp.ext_price, mp.description, mp.parent_id, mp.nl_soft_id, mp.xx_soft_id,short_name from manage_product mp
    </sql>
    <sql id="whereConditions">
        <where>
            <if test="category != null  and category != ''"> and category = #{category}</if>
            <if test="categoryList != null and categoryList.size() > 0">
                and category in
                <foreach collection="categoryList" item="category" open="(" separator="," close=")">
                    #{category}
                </foreach>
            </if>
            <if test="name != null and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="status != null  and status != ''"> and `status` = #{status}</if>
            <if test="statusList != null and statusList.size() > 0">
                and `status` in
                <foreach collection="statusList" item="status" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <!-- 数据范围过滤 -->
            ${params.dataScope}
        </where>
    </sql>
    <sql id="treeWhereConditions">
        <where>
            <if test="category != null  and category != ''"> and child.category = #{category}</if>
            <if test="categoryList != null and categoryList.size() > 0">
                and child.category in
                <foreach collection="categoryList" item="category" open="(" separator="," close=")">
                    #{category}
                </foreach>
            </if>
            <if test="name != null  and name != ''"> and child.name like concat('%', #{name}, '%')</if>
            <if test="parentName != null  and parentName != ''"> and parent.name like concat('%', #{parentName}, '%')</if>
            <if test="status != null  and status != ''"> and child.`status` = #{status}</if>
            <if test="statusList != null and statusList.size() > 0">
                and child.`status` in
                <foreach collection="statusList" item="status" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="parentId != null "> and child.parent_id = #{parentId}</if>
            <!-- 数据范围过滤 -->
            ${params.dataScope}
        </where>
    </sql>

    <select id="selectManageProductList" parameterType="com.internal.manager.dto.ManageProductQueryDTO" resultMap="ManageProductResultVO">
        <include refid="selectManageProductVo"/>
        <include refid="whereConditions"/>
    </select>
    <select id="selectManageProductCount" parameterType="com.internal.manager.dto.ManageProductQueryDTO" resultType="java.lang.Long">
        select count(id)
        from manage_product mp
        <include refid="whereConditions"/>
    </select>
    <select id="selectProductChildrenList" parameterType="com.internal.manager.dto.ManageProductQueryDTO" resultMap="ManageProductChildResultVO">
        SELECT
            child.id,
            child.category,
            child.name,
            child.unit,
            child.create_by,
            child.create_time,
            child.update_by,
            child.update_time,
            child.remark,
            child.`status`,
            child.parent_id,
            parent.name as parent_name,
            parent.`status` as parent_status,
            child.cost_price,
            child.ext_price,
            child.`description`,
            child.short_name,
            parent.short_name as parent_short_name
        from manage_product child
        join manage_product parent on child.parent_id = parent.id
        <include refid="treeWhereConditions"/>
    </select>
    <select id="selectProductChildrenCount" parameterType="com.internal.manager.dto.ManageProductQueryDTO" resultType="java.lang.Long">
        SELECT count(child.id)
        from manage_product child
        join manage_product parent on child.parent_id = parent.id
        <include refid="treeWhereConditions"/>
    </select>

    <select id="selectManageProductById" parameterType="Long" resultMap="ManageProductResultVO">
        <include refid="selectManageProductVo"/>
        where id = #{id}
    </select>
    <select id="selectProductChildrenListNoAuth" resultType="com.internal.manager.vo.ManageProductChildVO">
        SELECT
        child.id,
        child.category,
        child.name,
        child.unit,
        child.create_by,
        child.create_time,
        child.update_by,
        child.update_time,
        child.remark,
        child.`status`,
        child.parent_id,
        parent.name as parent_name,
        parent.`status` as parent_status,
        child.cost_price,
        child.ext_price,
        child.`description`,
        child.short_name,
        parent.short_name as parent_short_name
        from manage_product child
        join manage_product parent on child.parent_id = parent.id
        <include refid="treeWhereConditions"/>
    </select>

    <delete id="deleteManageProductById" parameterType="Long">
        delete from manage_product where id = #{id}
    </delete>

    <delete id="deleteManageProductByIds" parameterType="String">
        delete from manage_product where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>


</mapper>