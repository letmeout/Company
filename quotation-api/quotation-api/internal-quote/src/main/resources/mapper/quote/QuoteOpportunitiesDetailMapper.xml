<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.internal.quote.mapper.QuoteOpportunitiesDetailMapper">
    
    <resultMap type="com.internal.quote.domain.QuoteOpportunitiesDetail" id="QuoteOpportunitiesDetailResult">
        <result property="id"    column="id"    />
        <result property="opportunitiesId"    column="opportunities_id"    />
        <result property="opportunitiesParentId"    column="opportunities_parent_id"    />
        <result property="valuationVersion"    column="valuation_version"    />
        <result property="valuationDesc"    column="valuation_desc"    />
        <result property="amount"    column="amount"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="status"    column="status"    />
        <result property="supportRemark"    column="support_remark"    />
    </resultMap>

    <sql id="selectQuoteOpportunitiesDetailVo">
        qod.id, qod.opportunities_id, qod.opportunities_parent_id, qod.valuation_version, qod.valuation_desc, qod.amount,
        qod.create_by, qod.create_time, qod.update_by, qod.update_time, qod.remark, qod.status,qod.support_remark
    </sql>

    <select id="selectQuoteOpportunitiesDetailList" parameterType="com.internal.quote.domain.QuoteOpportunitiesDetail" resultMap="QuoteOpportunitiesDetailResult">
        select
            <include refid="selectQuoteOpportunitiesDetailVo"/>
        from quote_opportunities_detail qod
        <where>
            <if test="opportunitiesId != null "> and opportunities_id = #{opportunitiesId}</if>
            <if test="opportunitiesParentId != null "> and opportunities_parent_id = #{opportunitiesParentId}</if>
            <if test="valuationVersion != null  and valuationVersion != ''"> and valuation_version = #{valuationVersion}</if>
            <if test="valuationDesc != null  and valuationDesc != ''"> and valuation_desc = #{valuationDesc}</if>
            <if test="amount != null "> and amount = #{amount}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>

    <select id="selectQuoteOpportunitiesDetailById" parameterType="Long" resultMap="QuoteOpportunitiesDetailResult">
        select
        <include refid="selectQuoteOpportunitiesDetailVo"/>,
        su.nick_name as evaluator
        left join sys_user su on su.user_id = qod.create_by
        from quote_opportunities_detail qod
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="opportunitiesId != null and opportunitiesId != ''">
                and opportunities_id = #{opportunitiesId}
            </if>
        </where>
    </select>

    <delete id="deleteQuoteOpportunitiesDetailById" parameterType="Long">
        delete from quote_opportunities_detail where id = #{id}
    </delete>

    <delete id="deleteQuoteOpportunitiesDetailByIds" parameterType="String">
        delete from quote_opportunities_detail where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>